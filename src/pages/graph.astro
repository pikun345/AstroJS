---
import client from '../lib/apolloConn';
import '../styles/zeta.css';
import {gql} from "../../node_modules/@apollo/client/index"
const GET_DATA = gql `query Posts {
    posts{
      nodes {
        id
    title
    slug
    date
    uri
    excerpt
    commentStatus
    categories {
      nodes {
        id
        name
        uri
        slug
      }
    }
    tags {
      nodes {
        id
        name
        uri
        slug
        count
      }
    }
    author {
      node {
        id
        name
        firstName
        lastName
        uri
        avatar {
          url
        }
        seo {
          title
          description
          canonicalUrl
          focusKeywords
        }
      }
    }
    content(format: RENDERED)
    nextPost {
      uri
      title
    }
    previousPost {
      uri
      title
    }
    featuredImage {
      node {
        altText
        sourceUrl
        srcSet
        mediaItemUrl
        mediaDetails {
          sizes {
            name
            sourceUrl
            width
            height
            mimeType
          }
        }
      }
    }
    seo {
      title
      description
      canonicalUrl
      focusKeywords
      openGraph {
        url
        title
        siteName
        description
        image {
          secureUrl
          url
          width
          type
          height
        }
        locale
        type
      }
      jsonLd {
        raw
      }
     }

    }
      pageInfo {
        hasNextPage
        endCursor
      }
    }
  }
                 `;


let data :any= null;

try 
{
     const response = await client.query({ query: GET_DATA, }); 
     data = response.data; 
     console.log("mo data=",data.posts.nodes.categories.nodes.name)
}
catch(error) 
{
     console.error("Error fetching GraphQL data:", error); 
}

console.log("data11fbththth=",data);



---

<html>
  <body>
    
    <div>
      {data.posts.nodes.map((blogItem) => (
        
        <p>1 {blogItem.id} </p>
        <p>2{blogItem.uri}</p>
        <p>3{blogItem.slug}</p>
        <p>4{blogItem.date}</p>
        <p>5{blogItem.uri}</p>
        <p>6{blogItem.excerpt}</p>
        <p>7{blogItem.categories.nodes}</p>
        <p>auth id={blogItem.author.node.id}</p>
     
        <br>
        
      ))}
    </div>
  </body>
</html>
        
  