---
import Home from "../components/tempLets/Home.astro";
import Doc from "../components/ZetaPages/ZetaDoc.astro";
import Blog from "../components/ZetaPages/ZetaBlog.astro";
import Cont from "../components/ZetaPages/BlogContent.astro";

import { ContData, blg, doc, home } from "./DemoBackend.astro";
import MainLayout from "../layouts/ZetaMainLayOut.astro";
import DyLayout from "../layouts/DynamicPgLayOut.astro";

console.log("hii",home.slug);
console.log("hii",home.type);

//type matching with component 
const componentMap = {
  [home.type]: Home, // home page
  [doc.type]: Doc, // doc page
  [blg[0].type]: Blog, // blog page
  ...Object.fromEntries(ContData.map((data) => [data.type, Cont])), // content pages
};
export async function getStaticPaths() {
  const pages = [
    { slug: home.slug, type: home.type },
    { slug: doc.slug, type: doc.type },
    { slug: blg[0].slug, type: blg[0].type }
  ];

  // Map over ContData and add each item dynamically
  const contentPages = ContData.map((data) => ({
    slug: data.slug,
    type: data.type
  }));

  // Combine pages and contentPages into one array
  const allPages = [...pages, ...contentPages];

  // Generate static paths (passing both slug and type in params or props)
  const staticPaths = allPages.map(({ slug, type }) => ({
    params: { slug },   // Only slug as param
    props: { type }     // Pass type via props
  }));

  console.log("Generated static paths:", staticPaths);
  return staticPaths;
}
const { slug } = Astro.params;
const { type } = Astro.props;  // Access the type from props

// Retrieve the component from the map based on the slug
const PageComponent =componentMap[type] ;
console.log("yto",type)

// Determine which layout to use
const isContentPage = slug?.startsWith("blog/content");
---

{
  PageComponent ? (
    isContentPage ? (
      <DyLayout>
        <PageComponent  />
      </DyLayout>
    ) : (
      <MainLayout>
        <PageComponent doc={doc} blog={blg}/>
        
      </MainLayout>
    )
  ) : (
    <p>Page not found</p>
  )
}
