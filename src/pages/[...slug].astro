---
import Blog from "../components/ZetaPages/ZetaBlog.astro";
import Cont from "../components/ZetaPages/BlogContent.astro";
import MainLayout from "../layouts/ZetaMainLayOut.astro";
import { fetchdata } from "../typescript/backend/getData";

//type matching with component
const componentMap = {
  ["Home"]: Blog,
  ["content"]: Cont,
};

export async function getStaticPaths() {
  const data11: any = await fetchdata();

  //slug list
  const pages = [{ slug: "/", type: "Home" }];

  const contentPages = data11.map((data) => ({
    slug: "/" + data.slug,
    type: "content",
  }));

  // Combine pages and contentPages into one array
  const allPages = [...pages, ...contentPages];

  const staticPaths = allPages.map(({ slug, type }) => ({
    params: { slug },
    props: { type, data11 },
  }));

  return staticPaths;
}

const { slug } = Astro.params;
const { type, data11 } = Astro.props;

const PageComponent = Object.keys(componentMap).find((key) => key === type)? componentMap[type]: null;
---

{
  PageComponent ? (
    <MainLayout>
      <PageComponent data={data11} />
    </MainLayout>
  ) : (
    <p>Page not found</p>
  )
}
