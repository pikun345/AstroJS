---
import Home from "../components/tempLets/Home.astro";
import Doc from "../components/ZetaPages/ZetaDoc.astro";
import Blog from "../components/ZetaPages/ZetaBlog.astro";
import Cont from "../components/ZetaPages/BlogContent.astro";
import ZetaContact from "../components/ZetaPages/ZetaContact.astro";
import ZetaAccnt from "../components/ZetaPages/zetaAccnt.astro";
import ZetsShop from "../components/ZetaPages/ZetsShop.astro";
import OpenTkt from "../components/ZetaPages/openTkt.astro";
import Support from "../components/ZetaPages/Support.astro";

import { ContData, blg, doc, home, contact,account,shop,ticket,support} from "./DemoBackend.astro";
import MainLayout from "../layouts/ZetaMainLayOut.astro";
import DyLayout from "../layouts/DynamicPgLayOut.astro";

//type matching with component 
const componentMap = {
  ["Home"]: Home, // home page
  ["Doc"]: Doc, // doc page
  ["Blog"]: Blog, // blog page
  ["Contact"]: ZetaContact,
  ["account"]: ZetaAccnt,
  ["shop"]: ZetsShop,
  ["ticket"]: OpenTkt,
  ["support"]: Support,
  ["blog/content"]: Cont,
  // ["blog/content2"]: Cont,
  // ["blog/content3"]: Cont,


  // ["null"]:errPg;




};
export async function getStaticPaths() {
  const pages = [
    { slug: home.slug, type:home.type },
    { slug: doc.slug, type: doc.type },
    { slug: blg[0].slug, type: blg[0].type },
    { slug: contact.slug, type: contact.type },
    { slug: account.slug, type: account.type },
    { slug: shop.slug, type: shop.type },
    { slug: ticket.slug, type: ticket.type },
    { slug: support.slug, type: support.type }





  ];

  // Map over ContData and add each item dynamically
  const contentPages = ContData.map((data) => ({
    slug: data.slug,
    type: data.type
  }));

  // Combine pages and contentPages into one array
  const allPages = [...pages, ...contentPages];

  // Generate static paths (passing both slug and type in params or props)
  const staticPaths = allPages.map(({ slug, type }) => ({
    params: { slug },   
    props: { type }     
  }));

  console.log("Generated static paths:", staticPaths);
  return staticPaths;
}
const { slug } = Astro.params;
const { type } = Astro.props;  


console.log(componentMap[0]);
var PageComponent;

//assgining the right compo to pagecompo
for(let key in componentMap)
{
  if(key===type){
    PageComponent=componentMap[key];
    console.log("cmp=",PageComponent);
    break;
  }
  else{
    PageComponent=null;
  }



}

---

{
  PageComponent ? (
      <MainLayout>
        <PageComponent doc={doc} blog={blg}/>
        
      </MainLayout>
    
  ) : (
    <p>Page not found</p>
  )
}
