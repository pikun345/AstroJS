---
import Blog from "../components/ZetaPages/ZetaBlog.astro";
import Cont from "../components/ZetaPages/BlogContent.astro";
import MainLayout from "../layouts/ZetaMainLayOut.astro";
import {fetchdata} from "../typescript/getData";
import Author from "../components/ZetaPages/author.astro";
import Catagory from "../components/ZetaPages/Catagory.astro";
import Tag from "../components/ZetaPages/tag.astro";

//type matching with component
const componentMap = {
  ["Home"]: Blog,
  ["content"]: Cont,
  ["author"]:Author,
  ["Cat"]:Catagory,
  ["tag"]:Tag
};

export async function getStaticPaths({ paginate }) {
  const data11: any = await fetchdata();

//  slug list
  const pages = [{ slug: "/", type: "Home" , data:data11}];

  const contentPages = data11.map((data) => ({
  slug: "blog/" + data.slug,
  type: "content",
  data: data, // each index data is assigned correctly
  AllTag: data11.map((data) => data.tags),
  AllCategory:data11.map((data) => data.categories),
}));
    const auth=data11.map((data) => ({
    slug:data.author.node.uri,
    type: "author",
    data:data11, 

    
  }));
  const Cate = data11.flatMap((data1) =>
    data1.categories.nodes.map((data) => ({
      slug: data.uri, 
      type: "Cat",
      data: data11, 
    }))
  );

  const tags = data11.flatMap((data1) =>
    data1.tags.nodes.map((data) => ({
      slug: data.uri, 
      type: "tag",
      data: data11, 
    }))
  );


  const nextSlugs =data11.map(post => post.slug); 

  // Combine pages and contentPages into one array
  const allPages = [...pages,...contentPages,...auth,...Cate,...tags];



   const staticPaths = allPages.map(({ slug, type ,data,AllTag,AllCategory}) => ({
    params: { slug },
    props: { type,data,nextSlugs,Cate,AllTag,AllCategory}
  }));
  
  return staticPaths;
}

const { slug } = Astro.params;
const { type, data ,nextSlugs,AllTag,AllCategory} = Astro.props;

//mapping with slug type and getting the component
const PageComponent = Object.keys(componentMap).find((key) => key === type)? componentMap[type]: null;

---
{
  PageComponent ? (
    <MainLayout>
      <PageComponent data={data} sluglist={nextSlugs} slug={slug} AllTag={AllTag} AllCategory={AllCategory}/>
    </MainLayout>
  ) : (
    <p>Page not found</p>
  )
}